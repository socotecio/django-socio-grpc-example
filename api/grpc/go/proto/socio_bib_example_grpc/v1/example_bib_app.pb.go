// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proto/socio_bib_example_grpc/v1/example_bib_app.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthorDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId string `protobuf:"bytes,1,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *AuthorDestroyRequest) Reset() {
	*x = AuthorDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorDestroyRequest) ProtoMessage() {}

func (x *AuthorDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorDestroyRequest.ProtoReflect.Descriptor instead.
func (*AuthorDestroyRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{0}
}

func (x *AuthorDestroyRequest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

type AuthorListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthorListRequest) Reset() {
	*x = AuthorListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorListRequest) ProtoMessage() {}

func (x *AuthorListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorListRequest.ProtoReflect.Descriptor instead.
func (*AuthorListRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{1}
}

type AuthorListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*AuthorResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *AuthorListResponse) Reset() {
	*x = AuthorListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorListResponse) ProtoMessage() {}

func (x *AuthorListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorListResponse.ProtoReflect.Descriptor instead.
func (*AuthorListResponse) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{2}
}

func (x *AuthorListResponse) GetResults() []*AuthorResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

type AuthorPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId             string   `protobuf:"bytes,1,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	NameFirst            string   `protobuf:"bytes,2,opt,name=name_first,json=nameFirst,proto3" json:"name_first,omitempty"`
	NameLast             string   `protobuf:"bytes,3,opt,name=name_last,json=nameLast,proto3" json:"name_last,omitempty"`
	BirthDate            string   `protobuf:"bytes,4,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,5,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
}

func (x *AuthorPartialUpdateRequest) Reset() {
	*x = AuthorPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorPartialUpdateRequest) ProtoMessage() {}

func (x *AuthorPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*AuthorPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{3}
}

func (x *AuthorPartialUpdateRequest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *AuthorPartialUpdateRequest) GetNameFirst() string {
	if x != nil {
		return x.NameFirst
	}
	return ""
}

func (x *AuthorPartialUpdateRequest) GetNameLast() string {
	if x != nil {
		return x.NameLast
	}
	return ""
}

func (x *AuthorPartialUpdateRequest) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *AuthorPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

type AuthorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId  string `protobuf:"bytes,1,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	NameFirst string `protobuf:"bytes,2,opt,name=name_first,json=nameFirst,proto3" json:"name_first,omitempty"`
	NameLast  string `protobuf:"bytes,3,opt,name=name_last,json=nameLast,proto3" json:"name_last,omitempty"`
	BirthDate string `protobuf:"bytes,4,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
}

func (x *AuthorRequest) Reset() {
	*x = AuthorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorRequest) ProtoMessage() {}

func (x *AuthorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorRequest.ProtoReflect.Descriptor instead.
func (*AuthorRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{4}
}

func (x *AuthorRequest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *AuthorRequest) GetNameFirst() string {
	if x != nil {
		return x.NameFirst
	}
	return ""
}

func (x *AuthorRequest) GetNameLast() string {
	if x != nil {
		return x.NameLast
	}
	return ""
}

func (x *AuthorRequest) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

type AuthorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId  string `protobuf:"bytes,1,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	NameFirst string `protobuf:"bytes,2,opt,name=name_first,json=nameFirst,proto3" json:"name_first,omitempty"`
	NameLast  string `protobuf:"bytes,3,opt,name=name_last,json=nameLast,proto3" json:"name_last,omitempty"`
	BirthDate string `protobuf:"bytes,4,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
}

func (x *AuthorResponse) Reset() {
	*x = AuthorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorResponse) ProtoMessage() {}

func (x *AuthorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorResponse.ProtoReflect.Descriptor instead.
func (*AuthorResponse) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{5}
}

func (x *AuthorResponse) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *AuthorResponse) GetNameFirst() string {
	if x != nil {
		return x.NameFirst
	}
	return ""
}

func (x *AuthorResponse) GetNameLast() string {
	if x != nil {
		return x.NameLast
	}
	return ""
}

func (x *AuthorResponse) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

type AuthorRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId string `protobuf:"bytes,1,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *AuthorRetrieveRequest) Reset() {
	*x = AuthorRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorRetrieveRequest) ProtoMessage() {}

func (x *AuthorRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorRetrieveRequest.ProtoReflect.Descriptor instead.
func (*AuthorRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{6}
}

func (x *AuthorRetrieveRequest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

type BookDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId string `protobuf:"bytes,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
}

func (x *BookDestroyRequest) Reset() {
	*x = BookDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookDestroyRequest) ProtoMessage() {}

func (x *BookDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookDestroyRequest.ProtoReflect.Descriptor instead.
func (*BookDestroyRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{7}
}

func (x *BookDestroyRequest) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

type BookListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BookListRequest) Reset() {
	*x = BookListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookListRequest) ProtoMessage() {}

func (x *BookListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookListRequest.ProtoReflect.Descriptor instead.
func (*BookListRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{8}
}

type BookListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*BookResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *BookListResponse) Reset() {
	*x = BookListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookListResponse) ProtoMessage() {}

func (x *BookListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookListResponse.ProtoReflect.Descriptor instead.
func (*BookListResponse) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{9}
}

func (x *BookListResponse) GetResults() []*BookResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

type BookPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId               string   `protobuf:"bytes,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Authors              []string `protobuf:"bytes,3,rep,name=authors,proto3" json:"authors,omitempty"`
	Categories           []string `protobuf:"bytes,4,rep,name=categories,proto3" json:"categories,omitempty"`
	Isbn                 *string  `protobuf:"bytes,5,opt,name=isbn,proto3,oneof" json:"isbn,omitempty"`
	Publisher            string   `protobuf:"bytes,6,opt,name=publisher,proto3" json:"publisher,omitempty"`
	PublicationDate      string   `protobuf:"bytes,7,opt,name=publication_date,json=publicationDate,proto3" json:"publication_date,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,8,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
}

func (x *BookPartialUpdateRequest) Reset() {
	*x = BookPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookPartialUpdateRequest) ProtoMessage() {}

func (x *BookPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*BookPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{10}
}

func (x *BookPartialUpdateRequest) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *BookPartialUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BookPartialUpdateRequest) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *BookPartialUpdateRequest) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *BookPartialUpdateRequest) GetIsbn() string {
	if x != nil && x.Isbn != nil {
		return *x.Isbn
	}
	return ""
}

func (x *BookPartialUpdateRequest) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *BookPartialUpdateRequest) GetPublicationDate() string {
	if x != nil {
		return x.PublicationDate
	}
	return ""
}

func (x *BookPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

type BookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId          string   `protobuf:"bytes,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Title           string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Authors         []string `protobuf:"bytes,3,rep,name=authors,proto3" json:"authors,omitempty"`
	Categories      []string `protobuf:"bytes,4,rep,name=categories,proto3" json:"categories,omitempty"`
	Isbn            *string  `protobuf:"bytes,5,opt,name=isbn,proto3,oneof" json:"isbn,omitempty"`
	Publisher       string   `protobuf:"bytes,6,opt,name=publisher,proto3" json:"publisher,omitempty"`
	PublicationDate string   `protobuf:"bytes,7,opt,name=publication_date,json=publicationDate,proto3" json:"publication_date,omitempty"`
}

func (x *BookRequest) Reset() {
	*x = BookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookRequest) ProtoMessage() {}

func (x *BookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookRequest.ProtoReflect.Descriptor instead.
func (*BookRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{11}
}

func (x *BookRequest) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *BookRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BookRequest) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *BookRequest) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *BookRequest) GetIsbn() string {
	if x != nil && x.Isbn != nil {
		return *x.Isbn
	}
	return ""
}

func (x *BookRequest) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *BookRequest) GetPublicationDate() string {
	if x != nil {
		return x.PublicationDate
	}
	return ""
}

type BookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId          string   `protobuf:"bytes,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Title           string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Authors         []string `protobuf:"bytes,3,rep,name=authors,proto3" json:"authors,omitempty"`
	Categories      []string `protobuf:"bytes,4,rep,name=categories,proto3" json:"categories,omitempty"`
	Isbn            *string  `protobuf:"bytes,5,opt,name=isbn,proto3,oneof" json:"isbn,omitempty"`
	Publisher       string   `protobuf:"bytes,6,opt,name=publisher,proto3" json:"publisher,omitempty"`
	PublicationDate string   `protobuf:"bytes,7,opt,name=publication_date,json=publicationDate,proto3" json:"publication_date,omitempty"`
}

func (x *BookResponse) Reset() {
	*x = BookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookResponse) ProtoMessage() {}

func (x *BookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookResponse.ProtoReflect.Descriptor instead.
func (*BookResponse) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{12}
}

func (x *BookResponse) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *BookResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BookResponse) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *BookResponse) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *BookResponse) GetIsbn() string {
	if x != nil && x.Isbn != nil {
		return *x.Isbn
	}
	return ""
}

func (x *BookResponse) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *BookResponse) GetPublicationDate() string {
	if x != nil {
		return x.PublicationDate
	}
	return ""
}

type BookRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId string `protobuf:"bytes,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
}

func (x *BookRetrieveRequest) Reset() {
	*x = BookRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookRetrieveRequest) ProtoMessage() {}

func (x *BookRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookRetrieveRequest.ProtoReflect.Descriptor instead.
func (*BookRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{13}
}

func (x *BookRetrieveRequest) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

type BookStreamBooksByIDListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookIds []string `protobuf:"bytes,1,rep,name=book_ids,json=bookIds,proto3" json:"book_ids,omitempty"`
}

func (x *BookStreamBooksByIDListRequest) Reset() {
	*x = BookStreamBooksByIDListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookStreamBooksByIDListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookStreamBooksByIDListRequest) ProtoMessage() {}

func (x *BookStreamBooksByIDListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookStreamBooksByIDListRequest.ProtoReflect.Descriptor instead.
func (*BookStreamBooksByIDListRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{14}
}

func (x *BookStreamBooksByIDListRequest) GetBookIds() []string {
	if x != nil {
		return x.BookIds
	}
	return nil
}

type BookStreamBooksByIDListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Book *BookResponse `protobuf:"bytes,1,opt,name=book,proto3" json:"book,omitempty"`
}

func (x *BookStreamBooksByIDListResponse) Reset() {
	*x = BookStreamBooksByIDListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookStreamBooksByIDListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookStreamBooksByIDListResponse) ProtoMessage() {}

func (x *BookStreamBooksByIDListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookStreamBooksByIDListResponse.ProtoReflect.Descriptor instead.
func (*BookStreamBooksByIDListResponse) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{15}
}

func (x *BookStreamBooksByIDListResponse) GetBook() *BookResponse {
	if x != nil {
		return x.Book
	}
	return nil
}

type BookStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BookStreamRequest) Reset() {
	*x = BookStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookStreamRequest) ProtoMessage() {}

func (x *BookStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookStreamRequest.ProtoReflect.Descriptor instead.
func (*BookStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{16}
}

type JournalDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JournalId string `protobuf:"bytes,1,opt,name=journal_id,json=journalId,proto3" json:"journal_id,omitempty"`
}

func (x *JournalDestroyRequest) Reset() {
	*x = JournalDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalDestroyRequest) ProtoMessage() {}

func (x *JournalDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalDestroyRequest.ProtoReflect.Descriptor instead.
func (*JournalDestroyRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{17}
}

func (x *JournalDestroyRequest) GetJournalId() string {
	if x != nil {
		return x.JournalId
	}
	return ""
}

type JournalListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JournalListRequest) Reset() {
	*x = JournalListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalListRequest) ProtoMessage() {}

func (x *JournalListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalListRequest.ProtoReflect.Descriptor instead.
func (*JournalListRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{18}
}

type JournalListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*JournalResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *JournalListResponse) Reset() {
	*x = JournalListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalListResponse) ProtoMessage() {}

func (x *JournalListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalListResponse.ProtoReflect.Descriptor instead.
func (*JournalListResponse) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{19}
}

func (x *JournalListResponse) GetResults() []*JournalResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

type JournalPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JournalId            string   `protobuf:"bytes,1,opt,name=journal_id,json=journalId,proto3" json:"journal_id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Authors              []string `protobuf:"bytes,3,rep,name=authors,proto3" json:"authors,omitempty"`
	Categories           []string `protobuf:"bytes,4,rep,name=categories,proto3" json:"categories,omitempty"`
	Publisher            string   `protobuf:"bytes,5,opt,name=publisher,proto3" json:"publisher,omitempty"`
	PublicationDate      string   `protobuf:"bytes,6,opt,name=publication_date,json=publicationDate,proto3" json:"publication_date,omitempty"`
	Volume               *int32   `protobuf:"varint,7,opt,name=volume,proto3,oneof" json:"volume,omitempty"`
	Issue                *int32   `protobuf:"varint,8,opt,name=issue,proto3,oneof" json:"issue,omitempty"`
	Issn                 *string  `protobuf:"bytes,9,opt,name=issn,proto3,oneof" json:"issn,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,10,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
}

func (x *JournalPartialUpdateRequest) Reset() {
	*x = JournalPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalPartialUpdateRequest) ProtoMessage() {}

func (x *JournalPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*JournalPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{20}
}

func (x *JournalPartialUpdateRequest) GetJournalId() string {
	if x != nil {
		return x.JournalId
	}
	return ""
}

func (x *JournalPartialUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *JournalPartialUpdateRequest) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *JournalPartialUpdateRequest) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *JournalPartialUpdateRequest) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *JournalPartialUpdateRequest) GetPublicationDate() string {
	if x != nil {
		return x.PublicationDate
	}
	return ""
}

func (x *JournalPartialUpdateRequest) GetVolume() int32 {
	if x != nil && x.Volume != nil {
		return *x.Volume
	}
	return 0
}

func (x *JournalPartialUpdateRequest) GetIssue() int32 {
	if x != nil && x.Issue != nil {
		return *x.Issue
	}
	return 0
}

func (x *JournalPartialUpdateRequest) GetIssn() string {
	if x != nil && x.Issn != nil {
		return *x.Issn
	}
	return ""
}

func (x *JournalPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

type JournalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JournalId       string   `protobuf:"bytes,1,opt,name=journal_id,json=journalId,proto3" json:"journal_id,omitempty"`
	Title           string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Authors         []string `protobuf:"bytes,3,rep,name=authors,proto3" json:"authors,omitempty"`
	Categories      []string `protobuf:"bytes,4,rep,name=categories,proto3" json:"categories,omitempty"`
	Publisher       string   `protobuf:"bytes,5,opt,name=publisher,proto3" json:"publisher,omitempty"`
	PublicationDate string   `protobuf:"bytes,6,opt,name=publication_date,json=publicationDate,proto3" json:"publication_date,omitempty"`
	Volume          *int32   `protobuf:"varint,7,opt,name=volume,proto3,oneof" json:"volume,omitempty"`
	Issue           *int32   `protobuf:"varint,8,opt,name=issue,proto3,oneof" json:"issue,omitempty"`
	Issn            *string  `protobuf:"bytes,9,opt,name=issn,proto3,oneof" json:"issn,omitempty"`
}

func (x *JournalRequest) Reset() {
	*x = JournalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalRequest) ProtoMessage() {}

func (x *JournalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalRequest.ProtoReflect.Descriptor instead.
func (*JournalRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{21}
}

func (x *JournalRequest) GetJournalId() string {
	if x != nil {
		return x.JournalId
	}
	return ""
}

func (x *JournalRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *JournalRequest) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *JournalRequest) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *JournalRequest) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *JournalRequest) GetPublicationDate() string {
	if x != nil {
		return x.PublicationDate
	}
	return ""
}

func (x *JournalRequest) GetVolume() int32 {
	if x != nil && x.Volume != nil {
		return *x.Volume
	}
	return 0
}

func (x *JournalRequest) GetIssue() int32 {
	if x != nil && x.Issue != nil {
		return *x.Issue
	}
	return 0
}

func (x *JournalRequest) GetIssn() string {
	if x != nil && x.Issn != nil {
		return *x.Issn
	}
	return ""
}

type JournalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JournalId       string   `protobuf:"bytes,1,opt,name=journal_id,json=journalId,proto3" json:"journal_id,omitempty"`
	Title           string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Authors         []string `protobuf:"bytes,3,rep,name=authors,proto3" json:"authors,omitempty"`
	Categories      []string `protobuf:"bytes,4,rep,name=categories,proto3" json:"categories,omitempty"`
	Publisher       string   `protobuf:"bytes,5,opt,name=publisher,proto3" json:"publisher,omitempty"`
	PublicationDate string   `protobuf:"bytes,6,opt,name=publication_date,json=publicationDate,proto3" json:"publication_date,omitempty"`
	Volume          *int32   `protobuf:"varint,7,opt,name=volume,proto3,oneof" json:"volume,omitempty"`
	Issue           *int32   `protobuf:"varint,8,opt,name=issue,proto3,oneof" json:"issue,omitempty"`
	Issn            *string  `protobuf:"bytes,9,opt,name=issn,proto3,oneof" json:"issn,omitempty"`
}

func (x *JournalResponse) Reset() {
	*x = JournalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalResponse) ProtoMessage() {}

func (x *JournalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalResponse.ProtoReflect.Descriptor instead.
func (*JournalResponse) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{22}
}

func (x *JournalResponse) GetJournalId() string {
	if x != nil {
		return x.JournalId
	}
	return ""
}

func (x *JournalResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *JournalResponse) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *JournalResponse) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *JournalResponse) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *JournalResponse) GetPublicationDate() string {
	if x != nil {
		return x.PublicationDate
	}
	return ""
}

func (x *JournalResponse) GetVolume() int32 {
	if x != nil && x.Volume != nil {
		return *x.Volume
	}
	return 0
}

func (x *JournalResponse) GetIssue() int32 {
	if x != nil && x.Issue != nil {
		return *x.Issue
	}
	return 0
}

func (x *JournalResponse) GetIssn() string {
	if x != nil && x.Issn != nil {
		return *x.Issn
	}
	return ""
}

type JournalRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JournalId string `protobuf:"bytes,1,opt,name=journal_id,json=journalId,proto3" json:"journal_id,omitempty"`
}

func (x *JournalRetrieveRequest) Reset() {
	*x = JournalRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalRetrieveRequest) ProtoMessage() {}

func (x *JournalRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalRetrieveRequest.ProtoReflect.Descriptor instead.
func (*JournalRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{23}
}

func (x *JournalRetrieveRequest) GetJournalId() string {
	if x != nil {
		return x.JournalId
	}
	return ""
}

type PublicationCategoryDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId string `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
}

func (x *PublicationCategoryDestroyRequest) Reset() {
	*x = PublicationCategoryDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicationCategoryDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicationCategoryDestroyRequest) ProtoMessage() {}

func (x *PublicationCategoryDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicationCategoryDestroyRequest.ProtoReflect.Descriptor instead.
func (*PublicationCategoryDestroyRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{24}
}

func (x *PublicationCategoryDestroyRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

type PublicationCategoryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublicationCategoryListRequest) Reset() {
	*x = PublicationCategoryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicationCategoryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicationCategoryListRequest) ProtoMessage() {}

func (x *PublicationCategoryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicationCategoryListRequest.ProtoReflect.Descriptor instead.
func (*PublicationCategoryListRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{25}
}

type PublicationCategoryListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*PublicationCategoryResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *PublicationCategoryListResponse) Reset() {
	*x = PublicationCategoryListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicationCategoryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicationCategoryListResponse) ProtoMessage() {}

func (x *PublicationCategoryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicationCategoryListResponse.ProtoReflect.Descriptor instead.
func (*PublicationCategoryListResponse) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{26}
}

func (x *PublicationCategoryListResponse) GetResults() []*PublicationCategoryResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

type PublicationCategoryPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId           string   `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
}

func (x *PublicationCategoryPartialUpdateRequest) Reset() {
	*x = PublicationCategoryPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicationCategoryPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicationCategoryPartialUpdateRequest) ProtoMessage() {}

func (x *PublicationCategoryPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicationCategoryPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*PublicationCategoryPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{27}
}

func (x *PublicationCategoryPartialUpdateRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *PublicationCategoryPartialUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PublicationCategoryPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

type PublicationCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId string `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PublicationCategoryRequest) Reset() {
	*x = PublicationCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicationCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicationCategoryRequest) ProtoMessage() {}

func (x *PublicationCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicationCategoryRequest.ProtoReflect.Descriptor instead.
func (*PublicationCategoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{28}
}

func (x *PublicationCategoryRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *PublicationCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PublicationCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId string `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PublicationCategoryResponse) Reset() {
	*x = PublicationCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicationCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicationCategoryResponse) ProtoMessage() {}

func (x *PublicationCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicationCategoryResponse.ProtoReflect.Descriptor instead.
func (*PublicationCategoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{29}
}

func (x *PublicationCategoryResponse) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *PublicationCategoryResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PublicationCategoryRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId string `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
}

func (x *PublicationCategoryRetrieveRequest) Reset() {
	*x = PublicationCategoryRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicationCategoryRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicationCategoryRetrieveRequest) ProtoMessage() {}

func (x *PublicationCategoryRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicationCategoryRetrieveRequest.ProtoReflect.Descriptor instead.
func (*PublicationCategoryRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{30}
}

func (x *PublicationCategoryRetrieveRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

type PublisherDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublisherId string `protobuf:"bytes,1,opt,name=publisher_id,json=publisherId,proto3" json:"publisher_id,omitempty"`
}

func (x *PublisherDestroyRequest) Reset() {
	*x = PublisherDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherDestroyRequest) ProtoMessage() {}

func (x *PublisherDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherDestroyRequest.ProtoReflect.Descriptor instead.
func (*PublisherDestroyRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{31}
}

func (x *PublisherDestroyRequest) GetPublisherId() string {
	if x != nil {
		return x.PublisherId
	}
	return ""
}

type PublisherListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublisherListRequest) Reset() {
	*x = PublisherListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherListRequest) ProtoMessage() {}

func (x *PublisherListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherListRequest.ProtoReflect.Descriptor instead.
func (*PublisherListRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{32}
}

type PublisherListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*PublisherResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *PublisherListResponse) Reset() {
	*x = PublisherListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherListResponse) ProtoMessage() {}

func (x *PublisherListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherListResponse.ProtoReflect.Descriptor instead.
func (*PublisherListResponse) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{33}
}

func (x *PublisherListResponse) GetResults() []*PublisherResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

type PublisherPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublisherId          string   `protobuf:"bytes,1,opt,name=publisher_id,json=publisherId,proto3" json:"publisher_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address              *string  `protobuf:"bytes,3,opt,name=address,proto3,oneof" json:"address,omitempty"`
	City                 *string  `protobuf:"bytes,4,opt,name=city,proto3,oneof" json:"city,omitempty"`
	StateProvince        *string  `protobuf:"bytes,5,opt,name=state_province,json=stateProvince,proto3,oneof" json:"state_province,omitempty"`
	Country              *string  `protobuf:"bytes,6,opt,name=country,proto3,oneof" json:"country,omitempty"`
	Website              string   `protobuf:"bytes,7,opt,name=website,proto3" json:"website,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,8,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
}

func (x *PublisherPartialUpdateRequest) Reset() {
	*x = PublisherPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherPartialUpdateRequest) ProtoMessage() {}

func (x *PublisherPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*PublisherPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{34}
}

func (x *PublisherPartialUpdateRequest) GetPublisherId() string {
	if x != nil {
		return x.PublisherId
	}
	return ""
}

func (x *PublisherPartialUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PublisherPartialUpdateRequest) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *PublisherPartialUpdateRequest) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *PublisherPartialUpdateRequest) GetStateProvince() string {
	if x != nil && x.StateProvince != nil {
		return *x.StateProvince
	}
	return ""
}

func (x *PublisherPartialUpdateRequest) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *PublisherPartialUpdateRequest) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *PublisherPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

type PublisherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublisherId   string  `protobuf:"bytes,1,opt,name=publisher_id,json=publisherId,proto3" json:"publisher_id,omitempty"`
	Name          string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address       *string `protobuf:"bytes,3,opt,name=address,proto3,oneof" json:"address,omitempty"`
	City          *string `protobuf:"bytes,4,opt,name=city,proto3,oneof" json:"city,omitempty"`
	StateProvince *string `protobuf:"bytes,5,opt,name=state_province,json=stateProvince,proto3,oneof" json:"state_province,omitempty"`
	Country       *string `protobuf:"bytes,6,opt,name=country,proto3,oneof" json:"country,omitempty"`
	Website       string  `protobuf:"bytes,7,opt,name=website,proto3" json:"website,omitempty"`
}

func (x *PublisherRequest) Reset() {
	*x = PublisherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherRequest) ProtoMessage() {}

func (x *PublisherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherRequest.ProtoReflect.Descriptor instead.
func (*PublisherRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{35}
}

func (x *PublisherRequest) GetPublisherId() string {
	if x != nil {
		return x.PublisherId
	}
	return ""
}

func (x *PublisherRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PublisherRequest) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *PublisherRequest) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *PublisherRequest) GetStateProvince() string {
	if x != nil && x.StateProvince != nil {
		return *x.StateProvince
	}
	return ""
}

func (x *PublisherRequest) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *PublisherRequest) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

type PublisherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublisherId   string  `protobuf:"bytes,1,opt,name=publisher_id,json=publisherId,proto3" json:"publisher_id,omitempty"`
	Name          string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address       *string `protobuf:"bytes,3,opt,name=address,proto3,oneof" json:"address,omitempty"`
	City          *string `protobuf:"bytes,4,opt,name=city,proto3,oneof" json:"city,omitempty"`
	StateProvince *string `protobuf:"bytes,5,opt,name=state_province,json=stateProvince,proto3,oneof" json:"state_province,omitempty"`
	Country       *string `protobuf:"bytes,6,opt,name=country,proto3,oneof" json:"country,omitempty"`
	Website       string  `protobuf:"bytes,7,opt,name=website,proto3" json:"website,omitempty"`
}

func (x *PublisherResponse) Reset() {
	*x = PublisherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherResponse) ProtoMessage() {}

func (x *PublisherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherResponse.ProtoReflect.Descriptor instead.
func (*PublisherResponse) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{36}
}

func (x *PublisherResponse) GetPublisherId() string {
	if x != nil {
		return x.PublisherId
	}
	return ""
}

func (x *PublisherResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PublisherResponse) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *PublisherResponse) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *PublisherResponse) GetStateProvince() string {
	if x != nil && x.StateProvince != nil {
		return *x.StateProvince
	}
	return ""
}

func (x *PublisherResponse) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *PublisherResponse) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

type PublisherRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublisherId string `protobuf:"bytes,1,opt,name=publisher_id,json=publisherId,proto3" json:"publisher_id,omitempty"`
}

func (x *PublisherRetrieveRequest) Reset() {
	*x = PublisherRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherRetrieveRequest) ProtoMessage() {}

func (x *PublisherRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherRetrieveRequest.ProtoReflect.Descriptor instead.
func (*PublisherRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP(), []int{37}
}

func (x *PublisherRetrieveRequest) GetPublisherId() string {
	if x != nil {
		return x.PublisherId
	}
	return ""
}

var File_proto_socio_bib_example_grpc_v1_example_bib_app_proto protoreflect.FileDescriptor

var file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDesc = []byte{
	0x0a, 0x35, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6f, 0x63, 0x69, 0x6f, 0x5f, 0x62, 0x69,
	0x62, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62,
	0x5f, 0x61, 0x70, 0x70, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x33, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x12, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x1a, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x22, 0x88,
	0x01, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x22, 0x34, 0x0a, 0x15, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22,
	0x2d, 0x0a, 0x12, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0x11,
	0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x57, 0x0a, 0x10, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x18, 0x42,
	0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x17, 0x0a, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x73, 0x62, 0x6e,
	0x22, 0xe1, 0x01, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x73, 0x62,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x69, 0x73, 0x62, 0x6e, 0x22, 0xe2, 0x01, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x17,
	0x0a, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x69, 0x73, 0x62, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x73, 0x62, 0x6e, 0x22, 0x2e, 0x0a, 0x13, 0x42, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x1e, 0x42, 0x6f, 0x6f,
	0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x42, 0x79, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x73, 0x22, 0x60, 0x0a, 0x1f, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x42, 0x79, 0x49, 0x44, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x62, 0x6f, 0x6f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69,
	0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x13, 0x0a, 0x11, 0x42, 0x6f, 0x6f, 0x6b,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36, 0x0a,
	0x15, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x13, 0x4a,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xf9, 0x02, 0x0a, 0x1b, 0x4a,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01,
	0x52, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x73,
	0x73, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x69, 0x73, 0x73, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x69, 0x73, 0x73, 0x6e, 0x22, 0xb7, 0x02, 0x0a, 0x0e, 0x4a, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1b, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52,
	0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x73, 0x73,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x69, 0x73, 0x73, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x73, 0x73, 0x6e,
	0x22, 0xb8, 0x02, 0x0a, 0x0f, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x73, 0x73, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x69, 0x73, 0x73, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x73, 0x73, 0x6e, 0x22, 0x37, 0x0a, 0x16, 0x4a,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x21, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x1f,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x27, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x51, 0x0a, 0x1a, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x1b,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x45, 0x0a, 0x22, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x17, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x61, 0x0a,
	0x15, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69,
	0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x22, 0xdc, 0x02, 0x0a, 0x1d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x69, 0x74, 0x79,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22,
	0x9a, 0x02, 0x0a, 0x10, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x18,
	0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x9b, 0x02, 0x0a,
	0x11, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x3d, 0x0a, 0x18, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x49, 0x64, 0x32, 0x87, 0x05, 0x0a, 0x10, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x63,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62,
	0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x31,
	0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x37, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69,
	0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6d, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x32, 0x2e, 0x64, 0x73,
	0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62,
	0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0xf1, 0x06, 0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x5f, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x64, 0x73, 0x67,
	0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x12, 0x2f, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f,
	0x61, 0x70, 0x70, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f,
	0x61, 0x70, 0x70, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x64,
	0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x08, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x30, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f,
	0x61, 0x70, 0x70, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69,
	0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2e,
	0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x6f, 0x6f,
	0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x96, 0x01,
	0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x42, 0x79, 0x49,
	0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f,
	0x61, 0x70, 0x70, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x6f,
	0x6f, 0x6b, 0x73, 0x42, 0x79, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x73,
	0x42, 0x79, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x5f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x64, 0x73, 0x67,
	0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x93, 0x05, 0x0a, 0x11, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x65, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69,
	0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12,
	0x32, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6b, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f,
	0x61, 0x70, 0x70, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0d, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x2e, 0x64, 0x73,
	0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f,
	0x61, 0x70, 0x70, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x12, 0x33, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x2b, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4a,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xa6, 0x06,
	0x0a, 0x1d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12,
	0x7d, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x37, 0x2e, 0x64, 0x73, 0x67, 0x5f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f,
	0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63,
	0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x3e, 0x2e, 0x64, 0x73, 0x67, 0x5f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f,
	0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x2e, 0x64,
	0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x64, 0x73, 0x67, 0x5f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f,
	0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x0d, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x44, 0x2e, 0x64, 0x73,
	0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x38, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01,
	0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x3f, 0x2e, 0x64, 0x73, 0x67,
	0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x64, 0x73,
	0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x37, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x64, 0x73, 0x67,
	0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xab, 0x05, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x69,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62,
	0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69,
	0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x07, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x12, 0x34, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x64,
	0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x12, 0x35, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69,
	0x62, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x64, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0xf1, 0x01, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x73, 0x67,
	0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x5f, 0x62, 0x69, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x42, 0x12, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x42, 0x69, 0x62, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39,
	0x64, 0x6a, 0x61, 0x6e, 0x67, 0x6f, 0x2d, 0x73, 0x6f, 0x63, 0x69, 0x6f, 0x2d, 0x67, 0x72, 0x70,
	0x63, 0x2d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x6f, 0x63, 0x69, 0x6f, 0x5f, 0x62, 0x69, 0x62, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x44, 0x45, 0x58, 0xaa,
	0x02, 0x18, 0x44, 0x73, 0x67, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x42, 0x69, 0x62, 0x41, 0x70, 0x70, 0xca, 0x02, 0x18, 0x44, 0x73, 0x67,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5c, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42,
	0x69, 0x62, 0x41, 0x70, 0x70, 0xe2, 0x02, 0x24, 0x44, 0x73, 0x67, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x5c, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x69, 0x62, 0x41, 0x70, 0x70,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x19, 0x44,
	0x73, 0x67, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x3a, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x42, 0x69, 0x62, 0x41, 0x70, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescOnce sync.Once
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescData = file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDesc
)

func file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescGZIP() []byte {
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescOnce.Do(func() {
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescData)
	})
	return file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDescData
}

var file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_goTypes = []any{
	(*AuthorDestroyRequest)(nil),                    // 0: dsg_example.example_bib_app.AuthorDestroyRequest
	(*AuthorListRequest)(nil),                       // 1: dsg_example.example_bib_app.AuthorListRequest
	(*AuthorListResponse)(nil),                      // 2: dsg_example.example_bib_app.AuthorListResponse
	(*AuthorPartialUpdateRequest)(nil),              // 3: dsg_example.example_bib_app.AuthorPartialUpdateRequest
	(*AuthorRequest)(nil),                           // 4: dsg_example.example_bib_app.AuthorRequest
	(*AuthorResponse)(nil),                          // 5: dsg_example.example_bib_app.AuthorResponse
	(*AuthorRetrieveRequest)(nil),                   // 6: dsg_example.example_bib_app.AuthorRetrieveRequest
	(*BookDestroyRequest)(nil),                      // 7: dsg_example.example_bib_app.BookDestroyRequest
	(*BookListRequest)(nil),                         // 8: dsg_example.example_bib_app.BookListRequest
	(*BookListResponse)(nil),                        // 9: dsg_example.example_bib_app.BookListResponse
	(*BookPartialUpdateRequest)(nil),                // 10: dsg_example.example_bib_app.BookPartialUpdateRequest
	(*BookRequest)(nil),                             // 11: dsg_example.example_bib_app.BookRequest
	(*BookResponse)(nil),                            // 12: dsg_example.example_bib_app.BookResponse
	(*BookRetrieveRequest)(nil),                     // 13: dsg_example.example_bib_app.BookRetrieveRequest
	(*BookStreamBooksByIDListRequest)(nil),          // 14: dsg_example.example_bib_app.BookStreamBooksByIDListRequest
	(*BookStreamBooksByIDListResponse)(nil),         // 15: dsg_example.example_bib_app.BookStreamBooksByIDListResponse
	(*BookStreamRequest)(nil),                       // 16: dsg_example.example_bib_app.BookStreamRequest
	(*JournalDestroyRequest)(nil),                   // 17: dsg_example.example_bib_app.JournalDestroyRequest
	(*JournalListRequest)(nil),                      // 18: dsg_example.example_bib_app.JournalListRequest
	(*JournalListResponse)(nil),                     // 19: dsg_example.example_bib_app.JournalListResponse
	(*JournalPartialUpdateRequest)(nil),             // 20: dsg_example.example_bib_app.JournalPartialUpdateRequest
	(*JournalRequest)(nil),                          // 21: dsg_example.example_bib_app.JournalRequest
	(*JournalResponse)(nil),                         // 22: dsg_example.example_bib_app.JournalResponse
	(*JournalRetrieveRequest)(nil),                  // 23: dsg_example.example_bib_app.JournalRetrieveRequest
	(*PublicationCategoryDestroyRequest)(nil),       // 24: dsg_example.example_bib_app.PublicationCategoryDestroyRequest
	(*PublicationCategoryListRequest)(nil),          // 25: dsg_example.example_bib_app.PublicationCategoryListRequest
	(*PublicationCategoryListResponse)(nil),         // 26: dsg_example.example_bib_app.PublicationCategoryListResponse
	(*PublicationCategoryPartialUpdateRequest)(nil), // 27: dsg_example.example_bib_app.PublicationCategoryPartialUpdateRequest
	(*PublicationCategoryRequest)(nil),              // 28: dsg_example.example_bib_app.PublicationCategoryRequest
	(*PublicationCategoryResponse)(nil),             // 29: dsg_example.example_bib_app.PublicationCategoryResponse
	(*PublicationCategoryRetrieveRequest)(nil),      // 30: dsg_example.example_bib_app.PublicationCategoryRetrieveRequest
	(*PublisherDestroyRequest)(nil),                 // 31: dsg_example.example_bib_app.PublisherDestroyRequest
	(*PublisherListRequest)(nil),                    // 32: dsg_example.example_bib_app.PublisherListRequest
	(*PublisherListResponse)(nil),                   // 33: dsg_example.example_bib_app.PublisherListResponse
	(*PublisherPartialUpdateRequest)(nil),           // 34: dsg_example.example_bib_app.PublisherPartialUpdateRequest
	(*PublisherRequest)(nil),                        // 35: dsg_example.example_bib_app.PublisherRequest
	(*PublisherResponse)(nil),                       // 36: dsg_example.example_bib_app.PublisherResponse
	(*PublisherRetrieveRequest)(nil),                // 37: dsg_example.example_bib_app.PublisherRetrieveRequest
	(*emptypb.Empty)(nil),                           // 38: google.protobuf.Empty
}
var file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_depIdxs = []int32{
	5,  // 0: dsg_example.example_bib_app.AuthorListResponse.results:type_name -> dsg_example.example_bib_app.AuthorResponse
	12, // 1: dsg_example.example_bib_app.BookListResponse.results:type_name -> dsg_example.example_bib_app.BookResponse
	12, // 2: dsg_example.example_bib_app.BookStreamBooksByIDListResponse.book:type_name -> dsg_example.example_bib_app.BookResponse
	22, // 3: dsg_example.example_bib_app.JournalListResponse.results:type_name -> dsg_example.example_bib_app.JournalResponse
	29, // 4: dsg_example.example_bib_app.PublicationCategoryListResponse.results:type_name -> dsg_example.example_bib_app.PublicationCategoryResponse
	36, // 5: dsg_example.example_bib_app.PublisherListResponse.results:type_name -> dsg_example.example_bib_app.PublisherResponse
	4,  // 6: dsg_example.example_bib_app.AuthorController.Create:input_type -> dsg_example.example_bib_app.AuthorRequest
	0,  // 7: dsg_example.example_bib_app.AuthorController.Destroy:input_type -> dsg_example.example_bib_app.AuthorDestroyRequest
	1,  // 8: dsg_example.example_bib_app.AuthorController.List:input_type -> dsg_example.example_bib_app.AuthorListRequest
	3,  // 9: dsg_example.example_bib_app.AuthorController.PartialUpdate:input_type -> dsg_example.example_bib_app.AuthorPartialUpdateRequest
	6,  // 10: dsg_example.example_bib_app.AuthorController.Retrieve:input_type -> dsg_example.example_bib_app.AuthorRetrieveRequest
	4,  // 11: dsg_example.example_bib_app.AuthorController.Update:input_type -> dsg_example.example_bib_app.AuthorRequest
	11, // 12: dsg_example.example_bib_app.BookController.Create:input_type -> dsg_example.example_bib_app.BookRequest
	7,  // 13: dsg_example.example_bib_app.BookController.Destroy:input_type -> dsg_example.example_bib_app.BookDestroyRequest
	8,  // 14: dsg_example.example_bib_app.BookController.List:input_type -> dsg_example.example_bib_app.BookListRequest
	10, // 15: dsg_example.example_bib_app.BookController.PartialUpdate:input_type -> dsg_example.example_bib_app.BookPartialUpdateRequest
	13, // 16: dsg_example.example_bib_app.BookController.Retrieve:input_type -> dsg_example.example_bib_app.BookRetrieveRequest
	16, // 17: dsg_example.example_bib_app.BookController.Stream:input_type -> dsg_example.example_bib_app.BookStreamRequest
	14, // 18: dsg_example.example_bib_app.BookController.StreamBooksByIDList:input_type -> dsg_example.example_bib_app.BookStreamBooksByIDListRequest
	11, // 19: dsg_example.example_bib_app.BookController.Update:input_type -> dsg_example.example_bib_app.BookRequest
	21, // 20: dsg_example.example_bib_app.JournalController.Create:input_type -> dsg_example.example_bib_app.JournalRequest
	17, // 21: dsg_example.example_bib_app.JournalController.Destroy:input_type -> dsg_example.example_bib_app.JournalDestroyRequest
	18, // 22: dsg_example.example_bib_app.JournalController.List:input_type -> dsg_example.example_bib_app.JournalListRequest
	20, // 23: dsg_example.example_bib_app.JournalController.PartialUpdate:input_type -> dsg_example.example_bib_app.JournalPartialUpdateRequest
	23, // 24: dsg_example.example_bib_app.JournalController.Retrieve:input_type -> dsg_example.example_bib_app.JournalRetrieveRequest
	21, // 25: dsg_example.example_bib_app.JournalController.Update:input_type -> dsg_example.example_bib_app.JournalRequest
	28, // 26: dsg_example.example_bib_app.PublicationCategoryController.Create:input_type -> dsg_example.example_bib_app.PublicationCategoryRequest
	24, // 27: dsg_example.example_bib_app.PublicationCategoryController.Destroy:input_type -> dsg_example.example_bib_app.PublicationCategoryDestroyRequest
	25, // 28: dsg_example.example_bib_app.PublicationCategoryController.List:input_type -> dsg_example.example_bib_app.PublicationCategoryListRequest
	27, // 29: dsg_example.example_bib_app.PublicationCategoryController.PartialUpdate:input_type -> dsg_example.example_bib_app.PublicationCategoryPartialUpdateRequest
	30, // 30: dsg_example.example_bib_app.PublicationCategoryController.Retrieve:input_type -> dsg_example.example_bib_app.PublicationCategoryRetrieveRequest
	28, // 31: dsg_example.example_bib_app.PublicationCategoryController.Update:input_type -> dsg_example.example_bib_app.PublicationCategoryRequest
	35, // 32: dsg_example.example_bib_app.PublisherController.Create:input_type -> dsg_example.example_bib_app.PublisherRequest
	31, // 33: dsg_example.example_bib_app.PublisherController.Destroy:input_type -> dsg_example.example_bib_app.PublisherDestroyRequest
	32, // 34: dsg_example.example_bib_app.PublisherController.List:input_type -> dsg_example.example_bib_app.PublisherListRequest
	34, // 35: dsg_example.example_bib_app.PublisherController.PartialUpdate:input_type -> dsg_example.example_bib_app.PublisherPartialUpdateRequest
	37, // 36: dsg_example.example_bib_app.PublisherController.Retrieve:input_type -> dsg_example.example_bib_app.PublisherRetrieveRequest
	35, // 37: dsg_example.example_bib_app.PublisherController.Update:input_type -> dsg_example.example_bib_app.PublisherRequest
	5,  // 38: dsg_example.example_bib_app.AuthorController.Create:output_type -> dsg_example.example_bib_app.AuthorResponse
	38, // 39: dsg_example.example_bib_app.AuthorController.Destroy:output_type -> google.protobuf.Empty
	2,  // 40: dsg_example.example_bib_app.AuthorController.List:output_type -> dsg_example.example_bib_app.AuthorListResponse
	5,  // 41: dsg_example.example_bib_app.AuthorController.PartialUpdate:output_type -> dsg_example.example_bib_app.AuthorResponse
	5,  // 42: dsg_example.example_bib_app.AuthorController.Retrieve:output_type -> dsg_example.example_bib_app.AuthorResponse
	5,  // 43: dsg_example.example_bib_app.AuthorController.Update:output_type -> dsg_example.example_bib_app.AuthorResponse
	12, // 44: dsg_example.example_bib_app.BookController.Create:output_type -> dsg_example.example_bib_app.BookResponse
	38, // 45: dsg_example.example_bib_app.BookController.Destroy:output_type -> google.protobuf.Empty
	9,  // 46: dsg_example.example_bib_app.BookController.List:output_type -> dsg_example.example_bib_app.BookListResponse
	12, // 47: dsg_example.example_bib_app.BookController.PartialUpdate:output_type -> dsg_example.example_bib_app.BookResponse
	12, // 48: dsg_example.example_bib_app.BookController.Retrieve:output_type -> dsg_example.example_bib_app.BookResponse
	12, // 49: dsg_example.example_bib_app.BookController.Stream:output_type -> dsg_example.example_bib_app.BookResponse
	15, // 50: dsg_example.example_bib_app.BookController.StreamBooksByIDList:output_type -> dsg_example.example_bib_app.BookStreamBooksByIDListResponse
	12, // 51: dsg_example.example_bib_app.BookController.Update:output_type -> dsg_example.example_bib_app.BookResponse
	22, // 52: dsg_example.example_bib_app.JournalController.Create:output_type -> dsg_example.example_bib_app.JournalResponse
	38, // 53: dsg_example.example_bib_app.JournalController.Destroy:output_type -> google.protobuf.Empty
	19, // 54: dsg_example.example_bib_app.JournalController.List:output_type -> dsg_example.example_bib_app.JournalListResponse
	22, // 55: dsg_example.example_bib_app.JournalController.PartialUpdate:output_type -> dsg_example.example_bib_app.JournalResponse
	22, // 56: dsg_example.example_bib_app.JournalController.Retrieve:output_type -> dsg_example.example_bib_app.JournalResponse
	22, // 57: dsg_example.example_bib_app.JournalController.Update:output_type -> dsg_example.example_bib_app.JournalResponse
	29, // 58: dsg_example.example_bib_app.PublicationCategoryController.Create:output_type -> dsg_example.example_bib_app.PublicationCategoryResponse
	38, // 59: dsg_example.example_bib_app.PublicationCategoryController.Destroy:output_type -> google.protobuf.Empty
	26, // 60: dsg_example.example_bib_app.PublicationCategoryController.List:output_type -> dsg_example.example_bib_app.PublicationCategoryListResponse
	29, // 61: dsg_example.example_bib_app.PublicationCategoryController.PartialUpdate:output_type -> dsg_example.example_bib_app.PublicationCategoryResponse
	29, // 62: dsg_example.example_bib_app.PublicationCategoryController.Retrieve:output_type -> dsg_example.example_bib_app.PublicationCategoryResponse
	29, // 63: dsg_example.example_bib_app.PublicationCategoryController.Update:output_type -> dsg_example.example_bib_app.PublicationCategoryResponse
	36, // 64: dsg_example.example_bib_app.PublisherController.Create:output_type -> dsg_example.example_bib_app.PublisherResponse
	38, // 65: dsg_example.example_bib_app.PublisherController.Destroy:output_type -> google.protobuf.Empty
	33, // 66: dsg_example.example_bib_app.PublisherController.List:output_type -> dsg_example.example_bib_app.PublisherListResponse
	36, // 67: dsg_example.example_bib_app.PublisherController.PartialUpdate:output_type -> dsg_example.example_bib_app.PublisherResponse
	36, // 68: dsg_example.example_bib_app.PublisherController.Retrieve:output_type -> dsg_example.example_bib_app.PublisherResponse
	36, // 69: dsg_example.example_bib_app.PublisherController.Update:output_type -> dsg_example.example_bib_app.PublisherResponse
	38, // [38:70] is the sub-list for method output_type
	6,  // [6:38] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_init() }
func file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_init() {
	if File_proto_socio_bib_example_grpc_v1_example_bib_app_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AuthorDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AuthorListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AuthorListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AuthorPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AuthorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AuthorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*AuthorRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*BookDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*BookListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*BookListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*BookPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*BookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*BookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*BookRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*BookStreamBooksByIDListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*BookStreamBooksByIDListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*BookStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*JournalDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*JournalListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*JournalListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*JournalPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*JournalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*JournalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*JournalRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*PublicationCategoryDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*PublicationCategoryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*PublicationCategoryListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*PublicationCategoryPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*PublicationCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*PublicationCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*PublicationCategoryRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*PublisherDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*PublisherListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*PublisherListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*PublisherPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*PublisherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*PublisherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*PublisherRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[10].OneofWrappers = []any{}
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[11].OneofWrappers = []any{}
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[12].OneofWrappers = []any{}
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[20].OneofWrappers = []any{}
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[21].OneofWrappers = []any{}
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[22].OneofWrappers = []any{}
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[34].OneofWrappers = []any{}
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[35].OneofWrappers = []any{}
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes[36].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_goTypes,
		DependencyIndexes: file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_depIdxs,
		MessageInfos:      file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_msgTypes,
	}.Build()
	File_proto_socio_bib_example_grpc_v1_example_bib_app_proto = out.File
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_rawDesc = nil
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_goTypes = nil
	file_proto_socio_bib_example_grpc_v1_example_bib_app_proto_depIdxs = nil
}
